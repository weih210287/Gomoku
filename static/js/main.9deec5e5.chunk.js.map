{"version":3,"sources":["utils.js","constants/breakpoints.js","constants/GlobalStyle.js","constants/Wrappers.js","components/Menu.js","components/GameBoard.js","components/GameInfo.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["count","board","x","y","dirX","dirY","piece","tempX","tempY","consecutiveCount","GlobalStyle","createGlobalStyle","Wrapper","styled","div","TitleWrapper","GameBoardWrapper","Manual","Menu","showManual","onClick","show","window","location","reload","Board","Square","props","$isBlack","Piece","$manual","$piece","GameBoard","nextPlayer","manual","map","row","col","Info","Status","h3","$winner","Dropdown","input","MovesTitle","label","Pointer","span","Steps","ul","StepsCover","Step","li","GameInfo","winner","history","status","moves","step","index","desc","type","id","htmlFor","className","Copyright","Author","Footer","copyright","author","Title","h1","App","useState","Array","fill","coordinate","stepNumber","blackIsNext","game","setGame","current","every","calculateWinner","slice","length","newBoard","JSON","parse","stringify","handleClick","move","jumpTo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9deec5e5.chunk.js","sourcesContent":["export const calculateWinner = (board, x, y) => {\r\n  if (!x || !y) return;\r\n\r\n  if (\r\n    count(board, x, y, -1, 0) + count(board, x, y, 1, 0) >= 4 ||\r\n    count(board, x, y, 0, -1) + count(board, x, y, 0, 1) >= 4 ||\r\n    count(board, x, y, -1, -1) + count(board, x, y, 1, 1) >= 4 ||\r\n    count(board, x, y, 1, -1) + count(board, x, y, -1, 1) >= 4\r\n  ) {\r\n    return board[y][x].piece[0];\r\n  }\r\n  return board.every((y) => y.every((x) => x)) ? \"DRAW\" : null;\r\n};\r\n\r\nfunction count(board, x, y, dirX, dirY) {\r\n  const piece = board[y][x].piece[0];\r\n  let tempX = x;\r\n  let tempY = y;\r\n  let consecutiveCount = 0;\r\n\r\n  do {\r\n    tempX += dirX;\r\n    tempY += dirY;\r\n\r\n    if (tempX < 0 || tempY < 0 || tempX > 18 || tempY > 18) break;\r\n    if (!board[tempY][tempX]) break;\r\n    if (board[tempY][tempX].piece[0] !== piece) break;\r\n    consecutiveCount++;\r\n  } while (consecutiveCount < 5);\r\n  return consecutiveCount;\r\n}\r\n","export const MEDIA_QUERY_MD = \"@media screen and (max-width: 1280px)\";\r\nexport const MEDIA_QUERY_SM = \"@media screen and (max-width: 980px)\";\r\nexport const MEDIA_QUERY_XS = \"@media screen and (max-width: 768px)\";\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport {\r\n  MEDIA_QUERY_MD,\r\n  MEDIA_QUERY_SM,\r\n  MEDIA_QUERY_XS,\r\n} from \"./breakpoints.js\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  :root {\r\n    --wrapper-size: 1700px;\r\n    --board-size: 1000px;\r\n    --square-size: 50px;\r\n    --game-info-block-size: 250px;\r\n    --square-content-size: calc(var(--square-size) * 0.8);\r\n    --square-footer-size: calc(var(--square-size) * 0.3);\r\n    --black-text-color: #404040;\r\n    --black-piece: #475251;\r\n    --white-piece: #bbd7d4;\r\n    --piece-shadow: 1px 1px 4px #4752518c;\r\n  }\r\n\r\n  body {\r\n    text-align: center;\r\n    background: #fffdec;;\r\n  }\r\n\r\n  ol {\r\n    padding-left: 1em;\r\n  }\r\n\r\n  footer {\r\n    padding: 10px 0;\r\n    font-weight: bold;\r\n    font-size: var(--square-footer-size);\r\n    color: #73a5a1;\r\n    background: #5f8985;\r\n    box-shadow: 0px -3px 3px 0px rgb(56 56 56 / 24%);\r\n  }\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    :root {\r\n      --board-size: 810px;\r\n      --square-size: 40px;\r\n    }\r\n  }\r\n\r\n  ${MEDIA_QUERY_SM} {\r\n    :root {\r\n      --board-size: 620px;\r\n      --square-size: 30px;\r\n      --game-info-block-size: 200px;\r\n    }\r\n  }\r\n\r\n  ${MEDIA_QUERY_XS} {\r\n    :root {\r\n      --board-size: 430px;\r\n      --square-size: 20px;\r\n      --game-info-block-size: 100px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  max-width: var(--wrapper-size);\r\n`;\r\n\r\nconst TitleWrapper = styled(Wrapper)`\r\n  font-size: 16px;\r\n  background: #5f8985;\r\n  box-shadow: 0px 3px 3px 0px rgb(56 56 56 / 24%);\r\n`;\r\n\r\nconst GameBoardWrapper = styled(Wrapper)`\r\n  margin-top: 50px;\r\n  margin-bottom: 100px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport { TitleWrapper, GameBoardWrapper };\r\n","import styled from \"styled-components\";\r\n\r\nconst Manual = styled.div`\r\n  display: block;\r\n  padding: 3px;\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n  color: #fffdec;\r\n  background: #ff8d00;\r\n  border: 2px outset #5f8985;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n\r\n  &:active {\r\n    border-style: inset;\r\n  }\r\n\r\n  & ~ & {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport default function Menu({ showManual, onClick }) {\r\n  const show = showManual ? \"HIDE\" : \"SHOW\";\r\n\r\n  return (\r\n    <div>\r\n      <Manual onClick={() => onClick()}>\r\n        {show}\r\n        <br />\r\n        MANUAL\r\n      </Manual>\r\n      <Manual onClick={() => window.location.reload()}>RESTART</Manual>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Board = styled.div`\r\n  margin: 0 20px;\r\n  padding: 0 25px;\r\n  display: grid;\r\n  height: var(--board-size);\r\n  justify-content: center;\r\n  align-content: center;\r\n  grid-template-columns: repeat(19, var(--square-size));\r\n  grid-template-rows: repeat(19, var(--square-size));\r\n  background: #73a5a1;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Square = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0;\r\n  background: #ffffff;\r\n  border: 2px solid #73a5a1;\r\n  border-right: none;\r\n  border-bottom: none;\r\n\r\n  span {\r\n    position: absolute;\r\n    width: var(--square-content-size);\r\n    height: var(--square-content-size);\r\n    background: transparent;\r\n    border-radius: 50%;\r\n    z-index: 1;\r\n    transition: all 0.1s;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      background: ${(props) => (props.$isBlack ? \"#475251\" : \"#bbd7d4\")};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Piece = styled.div`\r\n  position: absolute;\r\n  width: var(--square-content-size);\r\n  height: var(--square-content-size);\r\n  color: ${(props) => (props.$manual ? \"#ffffff\" : \"transparent\")};\r\n  background: ${(props) => (props.$piece === \"Black\" ? \"#475251\" : \"#bbd7d4\")};\r\n  border-radius: 50%;\r\n  z-index: 2;\r\n`;\r\n\r\nexport default function GameBoard({ onClick, board, nextPlayer, manual }) {\r\n  return (\r\n    <Board>\r\n      {board.map((row, y) => {\r\n        return row.map((col, x) => {\r\n          return (\r\n            <Square\r\n              key={`y${y}x${x}`}\r\n              onClick={() => onClick(x, y)}\r\n              $isBlack={nextPlayer}\r\n            >\r\n              <span></span>\r\n              {col ? (\r\n                <Piece $piece={col.piece[0]} $manual={manual}>\r\n                  {col.piece[1]}\r\n                </Piece>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Square>\r\n          );\r\n        });\r\n      })}\r\n    </Board>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Info = styled.div`\r\n  max-width: 180px;\r\n  text-align: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst Status = styled.h3`\r\n  padding-left: 5px;\r\n  color: #ffffff;\r\n  background: ${(props) => (props.$winner ? \"#ff8d00\" : \"#5f8985\")};\r\n  border: 3px solid #5f8985;\r\n  transition: all 0.1s;\r\n`;\r\n\r\nconst Dropdown = styled.input`\r\n  display: none;\r\n\r\n  &:checked ~ div {\r\n    opacity: 1;\r\n  }\r\n\r\n  &:checked ~ div > ul {\r\n    display: block;\r\n  }\r\n\r\n  &:checked + label > span {\r\n    transform: rotate(225deg);\r\n  }\r\n`;\r\n\r\nconst MovesTitle = styled.label`\r\n  display: block;\r\n  padding-left: 5px;\r\n  font-weight: bold;\r\n  color: #ff8d00;\r\n  background: #ffffff;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Pointer = styled.span`\r\n  display: inline-block;\r\n  margin-left: 10px;\r\n  width: 0.5em;\r\n  height: 0.5em;\r\n  border-width: 3px 0 0 3px;\r\n  border-style: solid;\r\n  transform: rotate(45deg);\r\n  transition: all 0.4s;\r\n`;\r\n\r\nconst Steps = styled.ul`\r\n  display: none;\r\n  margin: 5px 0 0;\r\n  padding: 0;\r\n  height: calc(var(--board-size) * 0.8);\r\n  overflow: scroll;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst StepsCover = styled.div`\r\n  opacity: 0;\r\n  transition: all 0.4s;\r\n`;\r\n\r\nconst Step = styled.li`\r\n  margin-bottom: 3px;\r\n  padding-left: 3px;\r\n  list-style: none;\r\n  list-style-type: none;\r\n  color: #5f8985;\r\n  background: #deeae9;\r\n  border-left: 3px solid #ff8d00;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0px 3px 5px 0px rgb(56 56 56 / 24%),\r\n      0px -3px 5px 0px rgb(56 56 56 / 24%);\r\n  }\r\n`;\r\n\r\nexport default function GameInfo({ nextPlayer, winner, history, onClick }) {\r\n  const status = nextPlayer ? \"Black\" : \"White\";\r\n  const moves = history.map((step, index) => {\r\n    const desc = index\r\n      ? `Go to step ${index % 2 ? \"Black\" : \"White\"} #${index}`\r\n      : \"Game Start\";\r\n    return (\r\n      <Step key={index} onClick={() => onClick(index)}>\r\n        {desc}\r\n      </Step>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Info>\r\n      <Status $winner={winner}>\r\n        {winner ? \"Winner\" : \"Next Player:\"}\r\n        <br />\r\n        {winner ? winner : status}\r\n      </Status>\r\n      <div>\r\n        <Dropdown type=\"checkbox\" id=\"dropdown\" />\r\n        <MovesTitle htmlFor=\"dropdown\">\r\n          My Moves\r\n          <Pointer />\r\n        </MovesTitle>\r\n        <StepsCover>\r\n          <Steps className=\"dropdown-items\">{moves}</Steps>\r\n        </StepsCover>\r\n      </div>\r\n    </Info>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Copyright = styled.span`\r\n  font-weight: normal;\r\n  color: var(--black-text-color);\r\n  background: none;\r\n`;\r\n\r\nconst Author = styled.span`\r\n  padding: 0 5px;\r\n  font-style: italic;\r\n  color: #fffdec;\r\n  background: #ff8d00;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default function Footer({ copyright, author }) {\r\n  return (\r\n    <footer>\r\n      <Copyright>{copyright}</Copyright> Made by <Author>{author}</Author>\r\n    </footer>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { calculateWinner } from \"./utils.js\";\nimport GlobalStyle from \"./constants/GlobalStyle.js\";\nimport { TitleWrapper, GameBoardWrapper } from \"./constants/Wrappers.js\";\nimport Menu from \"./components/Menu.js\";\nimport GameBoard from \"./components/GameBoard.js\";\nimport GameInfo from \"./components/GameInfo.js\";\nimport Footer from \"./components/Footer.js\";\n\nconst Title = styled.h1`\n  text-align: center;\n  font-style: italic;\n  font-size: 2.5em;\n  letter-spacing: 3px;\n  color: #ff8d00;\n`;\n\nfunction App() {\n  const [game, setGame] = useState({\n    history: [\n      {\n        board: Array(19).fill(Array(19).fill(null)),\n        coordinate: [null, null],\n      },\n    ],\n    stepNumber: 0,\n    blackIsNext: true,\n    showManual: false,\n  });\n\n  const handleClick = (x, y) => {\n    const history = game.history.slice(0, game.stepNumber + 1);\n    const current = history[history.length - 1];\n    const newBoard = JSON.parse(JSON.stringify(current.board));\n\n    if (newBoard[y][x] || winner) return;\n\n    newBoard[y][x] = game.blackIsNext\n      ? { piece: [\"Black\", game.stepNumber + 1] }\n      : { piece: [\"White\", game.stepNumber + 1] };\n\n    setGame({\n      ...game,\n      history: [\n        ...history,\n        {\n          board: newBoard,\n          coordinate: [x, y],\n        },\n      ],\n      stepNumber: history.length,\n      blackIsNext: !game.blackIsNext,\n    });\n  };\n\n  const jumpTo = (move) => {\n    setGame({\n      ...game,\n      stepNumber: move,\n      blackIsNext: move % 2 === 0,\n    });\n  };\n\n  const show = () => {\n    setGame({\n      ...game,\n      showManual: !game.showManual,\n    });\n  };\n\n  // for render\n  const history = game.history;\n  const current = history[game.stepNumber];\n  const x = current.coordinate[0];\n  const y = current.coordinate[1];\n  const winner = calculateWinner(current.board, x, y);\n\n  return (\n    <div>\n      <GlobalStyle />\n      <TitleWrapper className=\"title-wrapper\">\n        <Title className=\"title\">Gomoku</Title>\n      </TitleWrapper>\n      <GameBoardWrapper className=\"gameboard-wrapper\">\n        <Menu showManual={game.showManual} onClick={() => show()} />\n        <GameBoard\n          className=\"gameboard\"\n          onClick={(x, y) => handleClick(x, y)}\n          board={current.board}\n          nextPlayer={game.blackIsNext}\n          manual={game.showManual}\n        />\n        <GameInfo\n          className=\"game-info\"\n          nextPlayer={game.blackIsNext}\n          winner={winner}\n          history={history}\n          onClick={(move) => jumpTo(move)}\n        />\n      </GameBoardWrapper>\n      <Footer copyright=\"Copyright © 2021\" author=\"gzzzz\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}